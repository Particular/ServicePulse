name: Release
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-*'
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
jobs:
  release:
    runs-on: windows-2022
    outputs:
      version: ${{ steps.save-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: 7.0.x
      - name: Add NODE_OPTIONS to ENVVARS # Must do this after checkout as checkout uses node v16 which will cause this to fail
        run: echo "NODE_OPTIONS=--openssl-legacy-provider" >> $env:GITHUB_ENV
      - name: AngularJs - Install Host npm packages
        run: npm run load
        working-directory: src/ServicePulse.Host/angular
      - name: AngularJs - Run lint
        run: npm run lint
        working-directory: src/ServicePulse.Host/angular
      - name: Build AngularJS and Vue.js
        run: PowerShell -File .\build.ps1
        working-directory: src/ServicePulse.Host
      - name: Remove NODE_OPTIONS to ENVVARS # Must do this before the next step so that the following node v16 steps don't fail
        run: echo "NODE_OPTIONS=" >> $env:GITHUB_ENV
      - name: Build
        run: dotnet build src --configuration Release
      - id: save-version
        name: Save version
        run: echo "version=${{env.MinVerVersion}}" >> $Env:GITHUB_OUTPUT
      - name: Sign NuGet packages
        uses: Particular/sign-nuget-packages-action@v1.0.0
        with:
          client-id: ${{ secrets.AZURE_KEY_VAULT_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_KEY_VAULT_TENANT_ID }}
          client-secret: ${{ secrets.AZURE_KEY_VAULT_CLIENT_SECRET }}
          certificate-name: ${{ secrets.AZURE_KEY_VAULT_CERTIFICATE_NAME }}
      - name: Setup Advanced Installer
        run: |
          $version = "20.2.1"
          choco install advanced-installer --version=$version
          & "C:\Program Files (x86)\Caphyon\Advanced Installer $version\bin\x86\AdvancedInstaller.com" /register ${{ secrets.ADVANCED_INSTALLER_LICENSE_KEY }}
      - name: Prepare AIP file
        run: |
          $content = Get-Content -Raw -Path src/Setup/ServicePulse.aip
          $content = $content -replace "replace-tenant-id", "${{ secrets.AZURE_KEY_VAULT_TENANT_ID }}" -replace "replace-app-id", "${{ secrets.AZURE_KEY_VAULT_CLIENT_ID }}" -replace "replace-cert-name", "${{ secrets.AZURE_KEY_VAULT_CERTIFICATE_NAME }}"
          Set-Content src/Setup/ServicePulse.aip $content
      - name: Build Windows installer
        env:
          AZURE_KEY_VAULT_CLIENT_SECRET: ${{ secrets.AZURE_KEY_VAULT_CLIENT_SECRET }}
        run: dotnet build src/Setup --configuration Release
      - name: Publish artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: artifacts
          path: |
            assets/*
            nugets/*
          retention-days: 1
      - name: Deploy
        uses: Particular/push-octopus-package-action@v1.1.0
        with:
          octopus-deploy-api-key: ${{ secrets.OCTOPUS_DEPLOY_API_KEY }}
  docker:
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-2019
            image-name: servicepulse-windows
            dockerfile: dockerfile.iis
          - os: ubuntu-20.04
            image-name: servicepulse
            dockerfile: dockerfile.nginx
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
      - name: Add NODE_OPTIONS to ENVVARS # Must do this after checkout as checkout uses node v16 which will cause this to fail
        run: echo "NODE_OPTIONS=--openssl-legacy-provider" >> $env:GITHUB_ENV
        shell: pwsh
      - name: Build AngularJS and Vue.js
        run: .\build.ps1
        shell: pwsh
        working-directory: src/ServicePulse.Host
      - name: Remove NODE_OPTIONS to ENVVARS # Must do this before the next step so that the following node v16 steps don't fail
        run: echo "NODE_OPTIONS=" >> $env:GITHUB_ENV
        shell: pwsh
      - name: Update app.constants.js
        run: |
          $filename = "src/ServicePulse.Host/app/js/app.constants.js"
          (Get-Content $filename).replace("1.2.0", "${{ needs.release.outputs.version }}") | Set-Content $filename
        shell: pwsh
      - name: Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker image
        run: docker build -t particular/${{ matrix.image-name }}:${{ needs.release.outputs.version }} -f ${{ matrix.dockerfile }} .
        working-directory: src
      - name: Push Docker image
        run: docker push particular/${{ matrix.image-name }}:${{ needs.release.outputs.version }}
